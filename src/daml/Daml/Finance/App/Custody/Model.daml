-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.App.Custody.Model where

import DA.Set (fromList)
import Daml.Finance.App.Interface.Common.Removable qualified as Removable (I, View(..))
import Daml.Finance.App.Interface.Custody.OpenAccountRequest qualified as OpenAccountRequest (HasImplementation, I, View(..))
import Daml.Finance.App.Interface.Custody.CloseAccountRequest qualified as CloseAccountRequest (HasImplementation, I, View(..))
import Daml.Finance.App.Interface.Custody.DepositRequest qualified as DepositRequest (HasImplementation, I, View(..))
import Daml.Finance.App.Interface.Custody.WithdrawRequest qualified as WithdrawRequest (HasImplementation, I, View(..))
import Daml.Finance.Interface.Account.Account qualified as Account (Controllers)
import Daml.Finance.Interface.Holding.Base qualified as Holding (I)
import Daml.Finance.Interface.Types.Common.Types (AccountKey, Id, InstrumentQuantity, PartiesMap)

instance OpenAccountRequest.HasImplementation OpenAccountRequest

template OpenAccountRequest
  with
    operator : Party
    provider : Party
    customer : Party
    id : Id
    description : Text
    controllers : Account.Controllers
    observers : PartiesMap
  where
    signatory operator, provider, customer

    interface instance Removable.I for OpenAccountRequest where
      view = Removable.View with removers = fromList [operator, provider, customer]

    interface instance OpenAccountRequest.I for OpenAccountRequest where
      view = OpenAccountRequest.View with
        operator
        provider
        customer
        id
        description
        controllers
        observers

      asRemovable = toInterface @Removable.I this

instance CloseAccountRequest.HasImplementation CloseAccountRequest

template CloseAccountRequest
  with
    operator : Party
    provider : Party
    customer : Party
    account : AccountKey
  where
    signatory operator, provider, customer

    interface instance Removable.I for CloseAccountRequest where
      view = Removable.View with removers = fromList [operator, provider, customer]

    interface instance CloseAccountRequest.I for CloseAccountRequest where
      view = CloseAccountRequest.View with
        operator
        provider
        customer
        account

      asRemovable = toInterface @Removable.I this

instance DepositRequest.HasImplementation DepositRequest

template DepositRequest
  with
    operator : Party
    provider : Party
    customer : Party
    quantity : InstrumentQuantity
    account : AccountKey
  where
    signatory operator, provider, customer

    interface instance Removable.I for DepositRequest where
      view = Removable.View with removers = fromList [operator, provider, customer]

    interface instance DepositRequest.I for DepositRequest where
      view = DepositRequest.View with
        operator
        provider
        customer
        quantity
        account

      asRemovable = toInterface @Removable.I this

instance WithdrawRequest.HasImplementation WithdrawRequest

template WithdrawRequest
  with
    operator : Party
    provider : Party
    customer : Party
    holdingCid : ContractId Holding.I
  where
    signatory operator, provider, customer

    interface instance Removable.I for WithdrawRequest where
      view = Removable.View with removers = fromList [operator, provider, customer]

    interface instance WithdrawRequest.I for WithdrawRequest where
      view = WithdrawRequest.View with
        operator
        provider
        customer
        holdingCid

      asRemovable = toInterface @Removable.I this
