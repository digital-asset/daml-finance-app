-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.App.Interface.Distribution.Bidding.Bid where

import Daml.Finance.App.Interface.Common.Removable qualified as Removable (I, Implementation)
import Daml.Finance.Interface.Holding.Fungible qualified as Fungible (I)
import Daml.Finance.Interface.Settlement.Instruction qualified as Instruction (I)
import Daml.Finance.Interface.Types.Common.Types (AccountKey, Id, InstrumentQuantity)

type I = Bid

type V = View

data View = View
  with
    operator : Party
    provider : Party
    customer : Party
    issuer : Party
    auctionId : Id
    details : Details
    collateralCid : ContractId Fungible.I
    receivableAccount : AccountKey
    status : Status
  deriving (Eq, Show)

data Details = Details with
    quantity : InstrumentQuantity
    price : InstrumentQuantity
    time : Time
  deriving (Eq, Show)

instance Ord Details where
  compare x y = (x.price.amount, x.quantity.amount, Down x.time) `compare` (y.price.amount, y.quantity.amount, Down y.time)

data Allocation = Allocation with
    bidCid : ContractId Bid
    bid : View
    amount : Decimal
  deriving (Eq, Show)

data SettleAllocation = SettleAllocation with
    allocation : Allocation
    price : Decimal
    issuer : Party
  deriving (Eq, Show)

data Status
    = Pending
    | FullAllocation with
        price : Decimal
    | PartialAllocation with
        price : Decimal
        amount : Decimal
    | NoAllocation
    | Invalid
  deriving (Eq, Show)

interface Bid where
  viewtype View
    -- ^ Interface view type.
  asRemovable : Removable.I
    -- ^ Conversion to the `Removable` interface.
  updateStatus : UpdateStatus -> Update (ContractId Bid)
    -- ^ Implementation of the `UpdateStatus` choice.
  approveInstruction : ApproveInstruction -> Update (ContractId Instruction.I)
    -- ^ Implementation of the `ApproveInstruction` choice.
  allocateInstruction : AllocateInstruction -> Update (ContractId Instruction.I)
    -- ^ Implementation of the `AllocateInstruction` choice.

  choice UpdateStatus : ContractId Bid
    with
      newStatus : Status
    controller (view this).provider
    do
      updateStatus this arg

  nonconsuming choice ApproveInstruction : ContractId Instruction.I
    with
      instructionCid : ContractId Instruction.I
      account : AccountKey
    controller (view this).provider
    do
      approveInstruction this arg

  nonconsuming choice AllocateInstruction : ContractId Instruction.I
    with
      instructionCid : ContractId Instruction.I
      holdingCid : ContractId Fungible.I
    controller (view this).provider
    do
      allocateInstruction this arg

-- | Type constraint for requiring templates to implement `Bid`.
type Implementation t = (HasToInterface t Bid, Removable.Implementation t)
class (Implementation t) => HasImplementation t
instance HasImplementation Bid
instance HasToInterface Bid Removable.I where _toInterface = asRemovable
