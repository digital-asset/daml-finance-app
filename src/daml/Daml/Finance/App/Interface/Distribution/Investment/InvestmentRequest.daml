-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.App.Interface.Distribution.Investment.InvestmentRequest where

import Daml.Finance.App.Interface.Common.Removable qualified as Removable (I, Implementation)
import Daml.Finance.Interface.Holding.Transferable qualified as Transferable (I)
import Daml.Finance.Interface.Settlement.Instruction qualified as Instruction (I)
import Daml.Finance.Interface.Types.Common.Types (AccountKey, Id, InstrumentQuantity)

type I = InvestmentRequest

type V = View

data View = View
  with
    operator : Party
    provider : Party
    customer : Party
    manager : Party
    requestId : Id
    asOfDate : Date
    fundId : Id
    quantity : InstrumentQuantity
    cashCid : ContractId Transferable.I
    customerFundAccount : AccountKey
  deriving (Eq, Show)

interface InvestmentRequest where
  viewtype View
    -- ^ Interface view type.

  asRemovable : Removable.I
    -- ^ Conversion to the `Removable` interface.

  allocateInstruction : AllocateInstruction -> Update (ContractId Instruction.I)
    -- ^ Implementation of the `AllocateInstruction` choice.

  approveInstruction : ApproveInstruction -> Update (ContractId Instruction.I)
    -- ^ Implementation of the `ApproveInstruction` choice.

  nonconsuming choice AllocateInstruction : ContractId Instruction.I
    with
      instructionCid : ContractId Instruction.I
    controller (view this).manager
    do
      allocateInstruction this arg

  nonconsuming choice ApproveInstruction : ContractId Instruction.I
    with
      instructionCid : ContractId Instruction.I
    controller (view this).manager
    do
      approveInstruction this arg

-- | Type constraint for requiring templates to implement `InvestmentRequest`.
type Implementation t = (HasToInterface t InvestmentRequest, Removable.Implementation t)
class (Implementation t) => HasImplementation t
instance HasImplementation InvestmentRequest
instance HasToInterface InvestmentRequest Removable.I where _toInterface = asRemovable
