-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.App.Interface.Distribution.Fund.Service where

import Daml.Finance.App.Interface.Base.Service qualified as Base (I, Implementation)
import Daml.Finance.App.Interface.Distribution.Fund.Fund qualified as Fund (I)
import Daml.Finance.App.Interface.Distribution.Fund.PooledInvestmentRequest qualified as PooledInvestmentRequest (I)
import Daml.Finance.App.Interface.Distribution.Investment.InvestmentRequest qualified as InvestmentRequest (I)
import Daml.Finance.App.Interface.Settlement.Service qualified as SettlementService (I)
import Daml.Finance.Interface.Lifecycle.Observable.NumericObservable qualified as NumericObservable (I)
import Daml.Finance.Interface.Holding.Base qualified as Holding (I)
import Daml.Finance.Interface.Holding.Transferable qualified as Transferable (I)
import Daml.Finance.Interface.Types.Common.Types (Id)

type I = Service

type V = View

data View = View
  with
    settlementServiceCid : ContractId SettlementService.I
  deriving (Eq, Show)

interface Service where
  viewtype V

  asBase : Base.I
    -- ^ Conversion to base `Service` interface.

  poolInvestmentRequests : PoolInvestmentRequests -> Update (ContractId PooledInvestmentRequest.I)
    -- ^ Implementation of the `PoolInvestmentRequests` choice.

  fulfillPooledInvestmentRequest : FulfillPooledInvestmentRequest -> Update [ContractId Holding.I]
    -- ^ Implementation of the `FulfillPooledInvestmentRequest` choice.

  nonconsuming choice PoolInvestmentRequests : ContractId PooledInvestmentRequest.I
    with
      requestId : Id
      asOfDate : Date
      fundCid : ContractId Fund.I
      cashCid : ContractId Transferable.I
      investmentRequestCids : [ContractId InvestmentRequest.I]
    controller (view $ asBase this).customer
    do
      poolInvestmentRequests this arg

  nonconsuming choice FulfillPooledInvestmentRequest : [ContractId Holding.I]
    with
      pooledInvestmentRequestCid : ContractId PooledInvestmentRequest.I
      fundCid : ContractId Fund.I
      navObservableCid : ContractId NumericObservable.I
    controller (view $ asBase this).provider
    do
      fulfillPooledInvestmentRequest this arg

-- | Type constraint for requiring templates to implement `Service`.
type Implementation t = (HasToInterface t Service, Base.Implementation t)
class (Implementation t) => HasImplementation t
instance HasImplementation Service
instance HasToInterface Service Base.I where _toInterface = asBase
